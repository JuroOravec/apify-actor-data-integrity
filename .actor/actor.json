{
  "actorSpecification": 1,
  "name": "data-integrity",
  "title": "Data Change Monitoring",
  "description": "Apify Actor that monitors data change (data integrity) of other actors or datasets",
  "version": "1.0",
  "dockerfile": "./Dockerfile",
  "input": {
    "schemaVersion": 1,
    "title": "Data Change Monitoring",
    "description": "Configure the Data Change Monitoring.",
    "type": "object",
    "properties": {
      "runType": {
        "type": "string",
        "title": "Run type (actor or task)",
        "description": "Whether to call an actor or a task",
        "editor": "select",
        "example": "ACTOR",
        "default": "ACTOR",
        "prefill": "ACTOR",
        "enum": [
          "ACTOR",
          "TASK"
        ],
        "enumTitles": [
          "Actor",
          "Task"
        ],
        "nullable": false
      },
      "actorOrTaskId": {
        "title": "Actor or Task ID",
        "type": "string",
        "description": "Actor or task to call. Allowed formats are `username/actor-name`, `userId/actor-name` or actor ID.",
        "editor": "textfield",
        "example": "username/actor-name",
        "nullable": true
      },
      "actorOrTaskBuild": {
        "title": "Actor or Task build",
        "type": "string",
        "description": "Tag or number of the actor build to run (e.g. `beta` or `1.2.345`).<br/><br/>\n    If not provided, the run uses build tag or number from the default actor run configuration (typically `latest`).",
        "editor": "textfield",
        "example": "1.2.345",
        "nullable": true
      },
      "actorOrTaskInput": {
        "title": "Actor or Task input",
        "type": "object",
        "description": "Input for the actor. An object is expected, which will be stringified to JSON and its content type set to `application/json; charset=utf-8`.",
        "editor": "json",
        "example": {
          "actorInputField1": true
        },
        "nullable": true
      },
      "actorOrTaskDatasetIdOrName": {
        "title": "Actor or Task output Dataset ID",
        "type": "string",
        "description": "ID or name of the dataset that stores entries scraped by the given actor or task.\n    <a href=\"https://docs.apify.com/sdk/python/docs/concepts/storages#opening-named-and-unnamed-storages\">Learn more</a><br/><br/>\n    <strong>NOTE:<strong> Dataset name can only contain letters 'a' through 'z', the digits '0' through '9', and the hyphen ('-') but only in the middle of the string (e.g. 'my-value-1')",
        "editor": "textfield",
        "example": "mIJVZsRQrDQf4rUAf",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
        "nullable": true
      },
      "comparisonDatasetIdOrName": {
        "title": "Comparison Dataset ID",
        "type": "string",
        "description": "ID or name of the dataset that stores entries from previous runs used for comparison.\n    <a href=\"https://docs.apify.com/sdk/python/docs/concepts/storages#opening-named-and-unnamed-storages\">Learn more</a><br/><br/>\n    <strong>NOTE:<strong> Dataset name can only contain letters 'a' through 'z', the digits '0' through '9', and the hyphen ('-') but only in the middle of the string (e.g. 'my-value-1')",
        "editor": "textfield",
        "example": "mIJVZsRQrDQf4rUAf",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
        "nullable": false
      },
      "comparisonDatasetPrimaryKeys": {
        "title": "Comparison - Primary keys",
        "type": "array",
        "description": "Define fields used for matching entries between scraped and comparison datasets.<br/><br/>\n    <strong>NOTE:<strong> If not set, the entries are hashed based on all fields",
        "editor": "stringList",
        "example": [
          "name",
          "city"
        ],
        "nullable": true
      },
      "comparisonDatasetRemoveStaleEntries": {
        "title": "Comparison - Replace stale entries",
        "type": "boolean",
        "description": "Scraped entries naturally get stale (e.g. a job offer is closed and removed from website). In such case, the entries in the comparison dataset can no longer be found in the scraped dataset, so we can't use them for comparison anymore. <br/><br/>\n    Instead, we can replace these \"stale\" entries, so that the next time we run the comparison, we will again be able to find all entries.<br/><br/>\n    If `true`, stale entries are automatically replaced if detected.<br/><br/>\n    You might want to set this to `false` if you have a referential dataset that you want to update manually.",
        "default": true,
        "example": true,
        "nullable": true
      },
      "comparisonDatasetMaxEntries": {
        "title": "Comparison - Max entries",
        "type": "integer",
        "description": "How many entries should be stored in the comparison dataset.<br/><br/>\n      Even with a dataset of thousands of entries, you should need only lower tens of entries to test the data integrity (assuming that these entries are well-diverse).",
        "example": 20,
        "prefill": 20,
        "default": 20,
        "minimum": 1,
        "nullable": true
      },
      "comparisonFieldsIgnore": {
        "title": "Comparison - Ignored fields",
        "type": "array",
        "description": "Some fields may change with every run (e.g. extraction timestamp). Such fields should be ignored from the data integrity check to avoid false alerts.",
        "editor": "stringList",
        "example": [
          "name",
          "city"
        ],
        "nullable": true
      },
      "comparisonFieldsWarn": {
        "title": "Comparison - Warning fields",
        "type": "array",
        "description": "Some fields are either not as important, or their value may change more often than other fields (e.g. a job ad description may be corrected a few times over its lifetimes). You can mark such fields to be classified as \"warnings\" instead of \"errors\".",
        "editor": "stringList",
        "example": [
          "name",
          "city"
        ],
        "nullable": true
      },
      "outputPickFields": {
        "title": "Pick dataset fields",
        "type": "array",
        "description": "Select a subset of fields of an entry that will be pushed to the dataset.<br/><br/>\n    If not set, all fields on an entry will be pushed to the dataset.<br/><br/>\n    This is done before `outputRenameFields`.<br/><br/>\n    Keys can be nested, e.g. `\"someProp.value[0]\"`.\n    Nested path is resolved using <a href=\"https://lodash.com/docs/4.17.15#get\">Lodash.get()</a>.",
        "editor": "stringList",
        "example": [
          "fieldName",
          "another.nested[0].field"
        ],
        "nullable": true,
        "sectionCaption": "Output Transformation & Filtering (T in ETL)"
      },
      "outputRenameFields": {
        "title": "Rename dataset fields",
        "type": "object",
        "description": "Rename fields (columns) of the output data.<br/><br/>\n    If not set, all fields will have their original names.<br/><br/>\n    This is done after `outputPickFields`.<br/><br/>\n    Keys can be nested, e.g. `\"someProp.value[0]\"`.\n    Nested path is resolved using <a href=\"https://lodash.com/docs/4.17.15#get\">Lodash.get()</a>.",
        "editor": "json",
        "example": {
          "oldFieldName": "newFieldName"
        },
        "nullable": true
      },
      "outputTransform": {
        "title": "Transform entries",
        "type": "string",
        "description": "Freely transform the output data object using a custom function.<br/><br/>\n    If not set, the data will remain as is.<br/><br/>\n    This is done after `outputPickFields` and `outputRenameFields`.<br/><br/>\n    The function has access to Apify's Actor class, and actor's input and a shared state in the second argument.<br/><br/>\n    `async (entry, { Actor, input, state, itemCacheKey }) => { ... }`\n    ",
        "editor": "javascript",
        "example": "async (entry, { Actor, input, state, itemCacheKey }) => { ... }",
        "nullable": true
      },
      "outputTransformBefore": {
        "title": "Transform entries - Setup",
        "type": "string",
        "description": "Use this if you need to run one-time initialization code before `outputTransform`.<br/><br/>\n    The function has access to Apify's Actor class, and actor's input and a shared state in the first argument.<br/><br/>\n    `async ({ Actor, input, state, itemCacheKey }) => { ... }`\n    ",
        "editor": "javascript",
        "example": "async ({ Actor, input, state, itemCacheKey }) => { ... }",
        "nullable": true
      },
      "outputTransformAfter": {
        "title": "Transform entries - Teardown",
        "type": "string",
        "description": "Use this if you need to run one-time teardown code after `outputTransform`.<br/><br/>\n    The function has access to Apify's Actor class, and actor's input and a shared state in the first argument.<br/><br/>\n    `async ({ Actor, input, state, itemCacheKey }) => { ... }`\n    ",
        "editor": "javascript",
        "example": "async ({ Actor, input, state, itemCacheKey }) => { ... }",
        "nullable": true
      },
      "outputFilter": {
        "title": "Filter entries",
        "type": "string",
        "description": "Decide which scraped entries should be included in the output by using a custom function.<br/><br/>\n    If not set, all scraped entries will be included.<br/><br/>\n    This is done after `outputPickFields`, `outputRenameFields`, and `outputTransform`.<br/><br/>\n    The function has access to Apify's Actor class, and actor's input and a shared state in the second argument.<br/><br/>\n    `async (entry, { Actor, input, state, itemCacheKey }) => boolean`\n    ",
        "editor": "javascript",
        "example": "async (entry, { Actor, input, state, itemCacheKey }) => boolean",
        "nullable": true
      },
      "outputFilterBefore": {
        "title": "Filter entries - Setup",
        "type": "string",
        "description": "Use this if you need to run one-time initialization code before `outputFilter`.<br/><br/>\n    The function has access to Apify's Actor class, and actor's input and a shared state in the first argument.<br/><br/>\n    `async (entry, { Actor, input, state, itemCacheKey }) => boolean`\n    ",
        "editor": "javascript",
        "example": "async ({ Actor, input, state, itemCacheKey }) => boolean",
        "nullable": true
      },
      "outputFilterAfter": {
        "title": "Filter entries - Teardown",
        "type": "string",
        "description": "Use this if you need to run one-time teardown code after `outputFilter`.<br/><br/>\n    The function has access to Apify's Actor class, and actor's input and a shared state in the first argument.<br/><br/>\n    `async ({ Actor, input, state, itemCacheKey }) => boolean`\n    ",
        "editor": "javascript",
        "example": "async ({ Actor, input, state, itemCacheKey }) => boolean",
        "nullable": true
      },
      "outputDatasetIdOrName": {
        "title": "Dataset ID or name",
        "type": "string",
        "description": "By default, data is written to Default dataset.\n    Set this option if you want to write data to non-default dataset.\n    <a href=\"https://docs.apify.com/sdk/python/docs/concepts/storages#opening-named-and-unnamed-storages\">Learn more</a><br/><br/>\n    <strong>NOTE:<strong> Dataset name can only contain letters 'a' through 'z', the digits '0' through '9', and the hyphen ('-') but only in the middle of the string (e.g. 'my-value-1')",
        "editor": "textfield",
        "example": "mIJVZsRQrDQf4rUAf",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
        "nullable": true,
        "sectionCaption": "Output Dataset & Caching (L in ETL)"
      },
      "outputCacheStoreIdOrName": {
        "title": "Cache ID or name",
        "type": "string",
        "description": "Set this option if you want to cache scraped entries in <a href=\"https://docs.apify.com/sdk/js/docs/guides/result-storage#key-value-store\">Apify's Key-value store</a>.<br/><br/>\n    This is useful for example when you want to scrape only NEW entries. In such case, you can use the `outputFilter` option to define a custom function to filter out entries already found in the cache.\n    <a href=\"https://docs.apify.com/sdk/python/docs/concepts/storages#working-with-key-value-stores\">Learn more</a><br/><br/>\n    <strong>NOTE:<strong> Cache name can only contain letters 'a' through 'z', the digits '0' through '9', and the hyphen ('-') but only in the middle of the string (e.g. 'my-value-1')",
        "editor": "textfield",
        "example": "mIJVZsRQrDQf4rUAf",
        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
        "nullable": true
      },
      "outputCachePrimaryKeys": {
        "title": "Cache primary keys",
        "type": "array",
        "description": "Specify fields that uniquely identify entries (primary keys), so entries can be compared against the cache.<br/><br/>\n    <strong>NOTE:<strong> If not set, the entries are hashed based on all fields",
        "editor": "stringList",
        "example": [
          "name",
          "city"
        ],
        "nullable": true
      },
      "outputCacheActionOnResult": {
        "title": "Cache action on result",
        "type": "string",
        "description": "Specify whether scraped results should be added to, removed from, or overwrite the cache.<br/><br/>\n    - <strong>add<strong> - Adds scraped results to the cache<br/><br/>\n    - <strong>remove<strong> - Removes scraped results from the cache<br/><br/>\n    - <strong>set<strong> - First clears all entries from the cache, then adds scraped results to the cache<br/><br/>\n    <strong>NOTE:<strong> No action happens when this field is empty.",
        "editor": "select",
        "enum": [
          "add",
          "remove",
          "overwrite"
        ],
        "example": "add",
        "nullable": true
      },
      "metamorphActorId": {
        "title": "Metamorph actor ID - metamorph to another actor at the end",
        "type": "string",
        "description": "Use this option if you want to run another actor with the same dataset after this actor has finished (AKA metamorph into another actor). <a href=\"https://docs.apify.com/sdk/python/docs/concepts/interacting-with-other-actors#actormetamorph\">Learn more</a> <br/><br/>New actor is identified by its ID, e.g. \"apify/web-scraper\".",
        "editor": "textfield",
        "example": "apify/web-scraper",
        "nullable": true,
        "sectionCaption": "Integrations (Metamorphing)"
      },
      "metamorphActorBuild": {
        "title": "Metamorph actor build",
        "type": "string",
        "description": "Tag or number of the target actor build to metamorph into (e.g. 'beta' or '1.2.345')",
        "editor": "textfield",
        "example": "1.2.345",
        "nullable": true
      },
      "metamorphActorInput": {
        "title": "Metamorph actor input",
        "type": "object",
        "description": "Input object passed to the follow-up (metamorph) actor. <a href=\"https://docs.apify.com/sdk/python/docs/concepts/interacting-with-other-actors#actormetamorph\">Learn more</a>",
        "editor": "json",
        "example": {
          "uploadDatasetToGDrive": true
        },
        "nullable": true
      }
    }
  },
  "storages": {
    "dataset": {
      "actorSpecification": 1,
      "fields": {},
      "views": {}
    }
  }
}